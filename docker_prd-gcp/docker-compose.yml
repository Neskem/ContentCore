version: '2'
services:
    nginx:
        container_name: nginx
        image: nginx:1.12
        depends_on:
            - web
            - worker
            # - worker-xpcrawler
            # - worker-xpmcrawler
            # - worker-aicrawler
        ports:
            - "80:80"
            # - "443:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        restart: always
    web:
        container_name: web
        image: cc
        # image: breaktimeinc/breaktime.contentcore
        command: uwsgi --ini uwsgi.ini
        # command: python wsgi.py runserver --debug
        # depends_on:
        #     - redis
        volumes:
           # - ..:/usr/src/app
           - /var/log/contentcore:/var/log/contentcore
        env_file: breakcontent.env
        environment:
            - CONTAINER_TAG=web
        expose:
            - "8700"
        # ports:
        #     - "8100:8100"
        #     - "8700:8700"
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
        restart: always
    beat:
        container_name: beat
        image: cc
        # image: breaktimeinc/breaktime.contentcore
        command: single-beat celery beat -A breakcontent.tasks -l info
        volumes:
           # - ..:/usr/src/app
           - /var/log/contentcore:/var/log/contentcore
        env_file: breakcontent.env
        environment:
            - CONTAINER_TAG=beat
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
        restart: always
    worker:
        container_name: worker
        image: cc
        # image: breaktimeinc/breaktime.contentcore
        command: celery worker -A breakcontent.tasks --loglevel=DEBUG --autoscale=100,5 -n worker.%%h -P gevent --purge
        volumes:
           # - ..:/usr/src/app
           - /var/log/contentcore:/var/log/contentcore
        env_file: breakcontent.env
        environment:
            - CONTAINER_TAG=worker
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
        restart: always
    worker-upsert:
        container_name: worker-upsert
        image: cc
        # image: breaktimeinc/breaktime.contentcore
        command: celery worker -A breakcontent.tasks -Q upsert_tm --loglevel=DEBUG --autoscale=100,2 -n worker-upsert.%%h
        volumes:
           # - ..:/usr/src/app
           - /var/log/contentcore:/var/log/contentcore
        env_file: breakcontent.env
        environment:
            - CONTAINER_TAG=worker-upsert
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
        restart: always
    worker-bypass:
        container_name: worker-bypass
        image: cc
        # image: breaktimeinc/breaktime.contentcore
        command: celery worker -A breakcontent.tasks -Q bypass_crawler --loglevel=DEBUG --autoscale=50,2 -n worker-bypass.%%h
        volumes:
           # - ..:/usr/src/app
           - /var/log/contentcore:/var/log/contentcore
        env_file: breakcontent.env
        environment:
            - CONTAINER_TAG=worker-bypass
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
        restart: always
    worker-p1:
        container_name: worker-p1
        image: cc
        # image: breaktimeinc/breaktime.contentcore
        command: celery worker -A breakcontent.tasks -Q priority_1 --loglevel=DEBUG --autoscale=50,2 -n worker-p1.%%h -P gevent --purge
        volumes:
           # - ..:/usr/src/app
           - /var/log/contentcore:/var/log/contentcore
        env_file: breakcontent.env
        environment:
            - CONTAINER_TAG=worker-p1
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
        restart: always
    worker-xpcrawler:
        container_name: worker-xpcrawler
        image: cc
        # image: breaktimeinc/breaktime.contentcore
        command: celery worker -A breakcontent.tasks -Q xpcrawler --loglevel=DEBUG --autoscale=200,10 -n worker-xpcrawler.%%h -P gevent --purge
        volumes:
           # - ..:/usr/src/app
           - /var/log/contentcore:/var/log/contentcore
        env_file: breakcontent.env
        environment:
            - CONTAINER_TAG=worker-xpcrawler
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
        restart: always
    worker-xpmcrawler:
        container_name: worker-xpmcrawler
        image: cc
        command: celery worker -A breakcontent.tasks -Q xpmcrawler --loglevel=DEBUG --autoscale=50,4 -n worker-xpmcrawler.%%h -P gevent --purge
        volumes:
           # - ..:/usr/src/app
           - /var/log/contentcore:/var/log/contentcore
        env_file: breakcontent.env
        environment:
            - CONTAINER_TAG=worker-xpmcrawler
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
        restart: always
    worker-aicrawler:
        container_name: worker-aicrawler
        image: cc
        # image: breaktimeinc/breaktime.contentcore
        command: celery worker -A breakcontent.tasks -Q aicrawler --loglevel=DEBUG --autoscale=100,5 -n worker-aicrawler.%%h -P gevent --purge
        volumes:
           # - ..:/usr/src/app
           - /var/log/contentcore:/var/log/contentcore
        env_file: breakcontent.env
        environment:
            - CONTAINER_TAG=worker-aicrawler
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
        restart: always
    flower:
        container_name: flower
        image: cc
        command: celery -A breakcontent.tasks flower --port=5555 --basic_auth=cc:cc
        ports:
            - "5555:5555"
        volumes:
           # - ..:/usr/src/app
           - /var/log/contentcore:/var/log/contentcore
        env_file: breakcontent.env
        environment:
            - CONTAINER_TAG=flower
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
        restart: always
